{"version":3,"sources":["icons/bus.svg","config.ts","utils/map.ts","utils/sse.ts","utils/svg.ts","components/Card.tsx","components/GlobalStyles.tsx","components/LoadingScreen.tsx","components/Map.tsx","components/TrackerMarker.tsx","components/Trackers.tsx","components/UserMarker.tsx","components/ViewportContext.tsx","components/App.tsx","hooks.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","process","API_URI","NODE_ENV","PUBLIC_URL","REACT_APP_API_URI","concat","window","location","hostname","MAP_DEFAULT_POSITION","center","zoom","MAP_BOUNDS","MAP_DETAILED_ZOOM_THRESHOLD","withinBounds","coords","L","contains","EventStreamClient","endpoint","Object","classCallCheck","this","source","EventSource","onopen","event","console","log","onerror","callback","addEventListener","nativeEvent","json","JSON","parse","e","safeJSONParse","data","on","toSVG","_ref","svg","angle","_ref$speed","speed","_ref$stroke","stroke","_ref$fill","fill","_ref$text","text","_ref$detailed","detailed","width","renderInfo","renderIcon","renderArrow","btoa","unescape","encodeURIComponent","Card","styled","div","_templateObject","GlobalStyles","createGlobalStyle","GlobalStyles_templateObject","pulse","keyframes","LoadingScreen_templateObject","LoadingContainer","_templateObject2","Image","img","_templateObject3","Headline","h2","_templateObject4","LoadingScreen","react_default","a","createElement","src","busIcon","alt","Map","children","props","objectWithoutProperties","es_Map","assign","maxZoom","minZoom","maxBounds","zoomControl","style","height","TileLayer","url","attribution","TrackerMarker","memo","position","_ref$name","name","_ref$color","color","markerRef","useRef","Marker","ref","icon","iconUrl","iconAnchor","className","onMoveStart","Trackers","trackers","routes","onTrackerClick","handleMarkerClick","tracker","Fragment","map","routeForMarker","find","route","id","routeId","components_TrackerMarker","key","latitude","longitude","onClick","UserMaker","_ref$accuracy","accuracy","Circle","radius","Number","weight","CircleMarker","fillColor","fillOpacity","ViewportContext","React","createContext","ViewportProvider","Provider","value","useSetState_default","TopBar","App_templateObject","BottomBar","App_templateObject2","App","_useContext","useContext","_useContext2","slicedToArray","viewport","setViewport","_useState","useState","_useState2","selectedMarker","setSelectedMarker","_useUserLocation","_useState3","_useState4","setLocation","_useBoolean","useBoolean_default","_useBoolean2","determined","setDetermined","geolocation","useGeolocation_default","isLocated","state","useEffect","userCoords","useCallback","useUserLocation","_useUserLocation2","userLocation","resetToUserLocation","useAsync_default","fetch","then","response","setTrackers","useEffectOnce_default","stream","receive","Array","isArray","useTrackers","loading","components_LoadingScreen","components_Map","onViewportChange","components_Trackers","UserMarker","type","components_Card","stringify","Boolean","match","ReactDOM","render","components_GlobalStyles","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e8a509be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bus.17d4ea0b.svg\";","import { Viewport } from './types';\n\nexport const { NODE_ENV, PUBLIC_URL, REACT_APP_API_URI } = process.env;\n\nexport const API_URI =\n  REACT_APP_API_URI || `http://${window.location.hostname}:3001/api`;\n\nexport const MAP_TILE_LAYER =\n  'https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png';\n\nexport const MAP_ATTRIBUTION =\n  '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"https://carto.com/attributions\">CARTO</a>';\n\nexport const MAP_DEFAULT_POSITION: Viewport = {\n  center: [48.2916063, 25.9345009],\n  zoom: 13\n};\n\nexport const MAP_BOUNDS: L.BoundsLiteral = [\n  [48.3777873761884, 25.789501368999485],\n  [48.1783186753248, 26.095058619976047]\n];\n\nexport const MAP_DETAILED_ZOOM_THRESHOLD = 15;\n","/* eslint import/prefer-default-export: 0 */\nimport * as L from 'leaflet';\nimport { MAP_BOUNDS } from '../config';\n\nexport function withinBounds(coords: L.LatLngTuple): boolean {\n  const bounds: L.Bounds = L.bounds(MAP_BOUNDS);\n  return bounds.contains(coords);\n}\n","interface EventStreamEvent extends Event {\n  data: string;\n}\ntype Callback<Data> = (\n  data: Data | null,\n  nativeEvent: EventStreamEvent\n) => void;\n\nfunction safeJSONParse<T>(json: string): T | null {\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    return null;\n  }\n}\n\nexport default class EventStreamClient {\n  public constructor(endpoint: string) {\n    this.source = new EventSource(endpoint);\n    this.source.onopen = event => console.log('open', event); // eslint-disable-line\n    this.source.onerror = event => console.log('error', event); // eslint-disable-line\n  }\n\n  private source: EventSource;\n\n  public on<Data>(event: string, callback: Callback<Data>): EventStreamClient {\n    this.source.addEventListener(\n      event,\n      (nativeEvent: Event): void =>\n        callback(\n          safeJSONParse<Data>((nativeEvent as EventStreamEvent).data),\n          nativeEvent as EventStreamEvent\n        )\n    );\n    return this;\n  }\n\n  public receive<Data>(callback: Callback<Data>): EventStreamClient {\n    this.on('message', callback);\n    return this;\n  }\n}\n","interface ToSVGParams {\n  speed: number;\n  angle: number;\n  stroke?: string;\n  fill?: string;\n  text?: string;\n  detailed?: boolean;\n}\n\nexport function renderArrow(\n  angle: ToSVGParams['angle'],\n  stroke?: ToSVGParams['stroke']\n): string {\n  return `\n    <path\n      transform=\"rotate(${angle}, 13.663, 19)\"\n      d=\"M13.3385 8.19589e-07L17.3222 7.03125L9.35481 7.03125L13.3385 8.19589e-07Z\"\n      fill=\"${stroke}\"\n    />\n  `;\n}\n\nexport function renderInfo(\n  text: ToSVGParams['text'],\n  speed?: ToSVGParams['speed'],\n  stroke?: ToSVGParams['stroke']\n): string {\n  return `\n    <text\n      fill=\"${stroke}\"\n      xml:space=\"preserve\"\n      style=\"font-family: Open Sans, sans-serif;\"\n      font-size=\"13\"\n      font-weight=\"800\"\n    >\n      <tspan x=\"35.2346\" y=\"16.0432\">${text}</tspan>\n    </text>\n    <text\n      fill=\"${stroke}\"\n      xml:space=\"preserve\"\n      style=\"font-family: Open Sans, sans-serif\"\n      font-size=\"13\"\n    >\n      <tspan x=\"35.2346\" y=\"29.0432\">${speed}км/год</tspan>\n    </text>\n  `;\n}\n\n// FIXME: Render trolleybus icon\nexport function renderIcon(\n  stroke?: ToSVGParams['stroke'],\n  fill?: ToSVGParams['fill']\n): string {\n  return `\n    <ellipse\n      cx=\"13.663\"\n      cy=\"19\"\n      rx=\"13\"\n      ry=\"13\"\n      fill=\"${fill}\"\n      stroke=\"${stroke}\"\n    />\n    <path\n      d=\"M19.0888 16.2313V23.8952H19.6554V16.2313H19.0888ZM16.5392 26.4231H10.8735V27H16.5392V26.4231ZM8.3239 23.8952V16.2313H7.75732V23.8952H8.3239ZM10.8735 26.4231C9.45894 26.4231 8.3239 25.2849 8.3239 23.8952H7.75732C7.75732 25.6164 9.15891 27 10.8735 27V26.4231ZM19.0888 23.8952C19.0888 25.2849 17.9537 26.4231 16.5392 26.4231V27C18.2538 27 19.6554 25.6164 19.6554 23.8952H19.0888ZM16.5392 13.7034C17.9537 13.7034 19.0888 14.8417 19.0888 16.2313H19.6554C19.6554 14.5101 18.2538 13.1265 16.5392 13.1265V13.7034ZM10.8735 13.1265C9.15891 13.1265 7.75732 14.5101 7.75732 16.2313H8.3239C8.3239 14.8417 9.45894 13.7034 10.8735 13.7034V13.1265ZM18.2389 16.2128V19.7585H18.8055V16.2128H18.2389ZM16.8225 21.1599H10.5902V21.7368H16.8225V21.1599ZM9.17376 19.7585V16.2128H8.60718V19.7585H9.17376ZM10.5902 14.8115H16.8225V14.2346H10.5902V14.8115ZM9.17376 16.2128C9.17376 15.4453 9.80147 14.8115 10.5902 14.8115V14.2346C9.50145 14.2346 8.60718 15.1138 8.60718 16.2128H9.17376ZM10.5902 21.1599C9.80147 21.1599 9.17376 20.526 9.17376 19.7585H8.60718C8.60718 20.8576 9.50145 21.7368 10.5902 21.7368V21.1599ZM18.2389 19.7585C18.2389 20.526 17.6112 21.1599 16.8225 21.1599V21.7368C17.9112 21.7368 18.8055 20.8576 18.8055 19.7585H18.2389ZM18.8055 16.2128C18.8055 15.1138 17.9112 14.2346 16.8225 14.2346V14.8115C17.6112 14.8115 18.2389 15.4453 18.2389 16.2128H18.8055ZM10.8735 24.0338C10.8735 24.3226 10.6307 24.5763 10.3069 24.5763V25.1533C10.9218 25.1533 11.44 24.6629 11.44 24.0338H10.8735ZM10.3069 24.5763C9.98307 24.5763 9.74033 24.3226 9.74033 24.0338H9.17376C9.17376 24.6629 9.69201 25.1533 10.3069 25.1533V24.5763ZM9.74033 24.0338C9.74033 23.745 9.98307 23.4912 10.3069 23.4912V22.9143C9.69201 22.9143 9.17376 23.4046 9.17376 24.0338H9.74033ZM10.3069 23.4912C10.6307 23.4912 10.8735 23.745 10.8735 24.0338H11.44C11.44 23.4046 10.9218 22.9143 10.3069 22.9143V23.4912ZM17.6724 24.0338C17.6724 24.3226 17.4296 24.5763 17.1058 24.5763V25.1533C17.7207 25.1533 18.2389 24.6629 18.2389 24.0338H17.6724ZM17.1058 24.5763C16.7819 24.5763 16.5392 24.3226 16.5392 24.0338H15.9726C15.9726 24.6629 16.4909 25.1533 17.1058 25.1533V24.5763ZM16.5392 24.0338C16.5392 23.745 16.7819 23.4912 17.1058 23.4912V22.9143C16.4909 22.9143 15.9726 23.4046 15.9726 24.0338H16.5392ZM17.1058 23.4912C17.4296 23.4912 17.6724 23.745 17.6724 24.0338H18.2389C18.2389 23.4046 17.7207 22.9143 17.1058 22.9143V23.4912ZM11.1516 13.4697C11.2472 12.9662 11.6954 12.5769 12.2425 12.5769V12C11.4283 12 10.7433 12.581 10.5953 13.3602L11.1516 13.4697ZM10.8735 13.7034H16.5392V13.1265H10.8735V13.7034ZM16.8173 13.3602C16.6693 12.581 15.9843 12 15.1702 12V12.5769C15.7173 12.5769 16.1654 12.9662 16.2611 13.4697L16.8173 13.3602ZM12.2425 12.5769H13.7063V12H12.2425V12.5769ZM13.7063 12.5769H15.1702V12H13.7063V12.5769ZM12.0066 23.8394H15.4061V23.2625H12.0066V23.8394ZM12.0066 24.9887H15.4061V24.4118H12.0066V24.9887Z\"\n      fill=\"${stroke}\"\n    />\n  `;\n}\n\nexport function toBase64(svg: string): string {\n  return `data:image/svg+xml;base64,${btoa(unescape(encodeURIComponent(svg)))}`;\n}\n\nexport function toSVG({\n  angle,\n  speed = 0,\n  stroke = '#7D5C65',\n  fill = 'white',\n  text = 'Невідомий',\n  detailed = true\n}: ToSVGParams): string {\n  const width = detailed ? 110 : 40;\n\n  return toBase64(`\n    <svg\n      width=\"${width}\"\n      height=\"40\"\n      viewBox=\"0 0 ${width - 10} 40\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      ${detailed ? renderInfo(text, speed, stroke) : ''}\n      ${renderIcon(stroke, fill)}\n      ${speed > 2 ? renderArrow(angle, stroke) : ''}\n    </svg>\n  `);\n}\n","import styled from 'styled-components';\n\nconst Card = styled.div`\n  background-color: white;\n  margin: 12px;\n  padding: 1rem;\n  border-radius: 5px;\n  color: #666;\n  box-shadow: 0 2px 3px #d6d6d6;\n  border: 1px solid #eee;\n`;\n\nexport default Card;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background-color: white;\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n      monospace;\n  }\n\n  body,\n  html,\n  #root {\n    height: 100%;\n  }\n\n  /* Animation for moving markers */\n  .animated-marker {\n    transition: transform 6s linear;\n    will-change: transition;\n  }\n\n  .leaflet-zoom-anim .animated-marker {\n    transition: none;\n  }\n`;\n\nexport default GlobalStyles;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport busIcon from '../icons/bus.svg';\n\nconst pulse = keyframes`\n  0% {\n    transform: scale(1)\n  }\n  50% {\n    transform: scale(0.75)\n  }\n  100% {\n    transform: scale(1)\n  }\n`;\n\nconst LoadingContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n  background-color: white;\n`;\n\nconst Image = styled.img`\n  width: 20%;\n  max-width: 100px;\n  margin: 2rem;\n  animation: 1s ${pulse} linear infinite;\n`;\n\nconst Headline = styled.h2`\n  color: #7d5c65;\n  font-weight: normal;\n  font-size: 1rem;\n`;\n\nconst LoadingScreen: React.SFC = (): React.ReactElement => (\n  <LoadingContainer>\n    <Image src={busIcon} alt=\"logo\" />\n    <Headline>Завантаження…</Headline>\n  </LoadingContainer>\n);\n\nexport default LoadingScreen;\n","import React from 'react';\nimport * as RL from 'react-leaflet';\nimport {\n  MAP_DEFAULT_POSITION,\n  MAP_BOUNDS,\n  MAP_TILE_LAYER,\n  MAP_ATTRIBUTION\n} from '../config';\nimport { Viewport } from '../types';\n\ninterface MapProps extends RL.MapProps {\n  onClick?: () => void;\n  onViewportChange?: (viewport: Viewport) => void;\n}\n\nconst Map: React.SFC<MapProps> = ({ children, ...props }) => (\n  <RL.Map\n    {...MAP_DEFAULT_POSITION}\n    maxZoom={20}\n    minZoom={12}\n    maxBounds={MAP_BOUNDS}\n    zoomControl={false}\n    style={{ height: '100%' }}\n    {...props}\n  >\n    <RL.TileLayer url={MAP_TILE_LAYER} attribution={MAP_ATTRIBUTION} />\n    {children}\n  </RL.Map>\n);\n\nexport default Map;\n","import React, { memo, useRef } from 'react';\nimport * as L from 'leaflet';\nimport * as RL from 'react-leaflet';\nimport { toSVG } from '../utils';\n\nexport interface TrackerMarkerProps {\n  position: L.LatLngTuple;\n  speed: number;\n  angle: number;\n  detailed?: boolean;\n  name?: string;\n  color?: string;\n  onClick?(e: React.SyntheticEvent): void;\n}\n\nconst TrackerMarker: React.SFC<TrackerMarkerProps> = memo(\n  ({\n    position,\n    speed,\n    angle,\n    detailed = true,\n    name = 'Невідомий',\n    color = 'gray',\n    ...props\n  }) => {\n    const markerRef = useRef(null);\n\n    return (\n      <RL.Marker\n        ref={markerRef}\n        position={position}\n        icon={L.icon({\n          iconUrl: toSVG({\n            speed,\n            angle,\n            text: name,\n            stroke: color,\n            detailed\n          }),\n          iconAnchor: [13, 19],\n          className: 'animated-marker'\n        })}\n        onMoveStart={console.log}\n        {...props}\n      />\n    );\n  }\n);\n\nexport default TrackerMarker;\n","import React from 'react';\nimport { Tracker, Route } from '@chernivtsi-transport/api'; // eslint-disable-line\nimport { TrackerMarker } from '.';\n\ninterface TrackersProps {\n  trackers: Tracker[];\n  routes: Route[];\n  detailed?: boolean;\n  onTrackerClick?: (tracker: Tracker, event: React.SyntheticEvent) => void;\n}\n\nfunction Trackers({\n  trackers,\n  routes,\n  onTrackerClick,\n  detailed = true\n}: TrackersProps): React.ReactElement {\n  function handleMarkerClick(\n    tracker: Tracker\n  ): (e: React.SyntheticEvent) => void {\n    return event => {\n      if (onTrackerClick) {\n        return onTrackerClick(tracker, event);\n      }\n      return undefined;\n    };\n  }\n\n  return (\n    <>\n      {trackers.map((tracker: Tracker) => {\n        // FIXME: To be memoized\n        const routeForMarker = routes.find(\n          route => route.id === tracker.routeId\n        );\n\n        if (tracker.id !== 'trans-gps:149') {\n          // return null;\n        }\n\n        return (\n          <TrackerMarker\n            key={tracker.id}\n            position={[tracker.latitude, tracker.longitude]}\n            speed={tracker.speed}\n            angle={tracker.angle}\n            name={routeForMarker && routeForMarker.name}\n            color={routeForMarker && routeForMarker.color}\n            detailed={detailed}\n            onClick={handleMarkerClick(tracker)}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nexport default Trackers;\n","import React, { memo } from 'react';\nimport * as L from 'leaflet';\nimport * as RL from 'react-leaflet';\nimport { withinBounds } from '../utils';\n\ninterface UserMakerProps {\n  position: L.LatLngTuple;\n  accuracy: number | null;\n}\n\nconst UserMaker: React.SFC<UserMakerProps> = memo(\n  ({ position, accuracy = 7 }): React.ReactElement | null => {\n    if (!withinBounds(position)) {\n      return null;\n    }\n\n    return (\n      <>\n        <RL.Circle center={position} radius={Number(accuracy)} weight={1} />\n        <RL.CircleMarker\n          center={position}\n          radius={7}\n          fillColor=\"#3388ff\"\n          color=\"#2277ee\"\n          fillOpacity={1}\n        />\n      </>\n    );\n  }\n);\n\nexport default UserMaker;\n","import React, { memo } from 'react';\nimport { useSetState } from 'react-use';\nimport { Viewport } from '../types';\nimport { MAP_DEFAULT_POSITION } from '../config';\n\ntype ViewportSetter = (viewport: Partial<Viewport>) => void;\ntype ViewportState = [Viewport, ViewportSetter];\n\nconst ViewportContext = React.createContext<ViewportState>([\n  MAP_DEFAULT_POSITION,\n  () => {}\n]);\n\nexport function useViewport(): ViewportState {\n  return useSetState<Viewport>(MAP_DEFAULT_POSITION);\n}\n\nexport const ViewportProvider: React.SFC<{}> = memo(props => (\n  <ViewportContext.Provider value={useViewport()} {...props} />\n));\n\nexport default ViewportContext;\n","import React, { ReactElement, useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { useTrackers, useRoutes, useUserLocation } from '../hooks';\nimport {\n  Card,\n  UserMarker,\n  LoadingScreen,\n  Map,\n  Trackers,\n  ViewportContext\n} from '.';\nimport { MAP_DETAILED_ZOOM_THRESHOLD } from '../config';\n\nconst TopBar = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 999;\n  width: 100%;\n  min-height: 55px;\n  overflow: auto;\n  background-image: linear-gradient(\n    rgba(255, 255, 255, 1) 10%,\n    rgba(255, 255, 255, 0) 100%\n  );\n`;\n\nconst BottomBar = styled.div`\n  position: fixed;\n  z-index: 8888;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nexport const App: React.SFC = (): ReactElement => {\n  const [viewport, setViewport] = useContext(ViewportContext);\n  const [selectedMarker, setSelectedMarker] = useState<string | null>(null);\n  const [userLocation, resetToUserLocation] = useUserLocation();\n  const routes = useRoutes();\n  const trackers = useTrackers();\n\n  if (routes.loading || !routes.value) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <>\n      <TopBar />\n      <Map\n        {...viewport}\n        onClick={() => setSelectedMarker(null)}\n        onViewportChange={setViewport}\n      >\n        <Trackers\n          trackers={trackers}\n          routes={routes.value || []} // @TODO: Better solution\n          onTrackerClick={tracker => setSelectedMarker(tracker.id)}\n          detailed={viewport.zoom >= MAP_DETAILED_ZOOM_THRESHOLD}\n        />\n        {userLocation && userLocation.latitude && userLocation.longitude && (\n          <UserMarker\n            position={[userLocation.latitude, userLocation.longitude]}\n            accuracy={userLocation.accuracy}\n          />\n        )}\n      </Map>\n      <BottomBar>\n        <button type=\"button\" onClick={resetToUserLocation}>\n          x\n        </button>\n        {selectedMarker && (\n          <Card>\n            <pre>\n              {JSON.stringify(\n                trackers.find(tracker => tracker.id === selectedMarker),\n                null,\n                2\n              )}\n            </pre>\n          </Card>\n        )}\n      </BottomBar>\n    </>\n  );\n};\n\nexport default App;\n","import { useState, useEffect, useContext, useCallback } from 'react';\nimport { useEffectOnce, useAsync, useBoolean, useGeolocation } from 'react-use';\nimport { GeoLocationSensorState } from 'react-use/lib/useGeolocation';\nimport { Tracker, Route } from '@chernivtsi-transport/api'; // eslint-disable-line\nimport { withinBounds } from './utils';\nimport EventStreamClient from './utils/sse';\nimport { API_URI, MAP_DETAILED_ZOOM_THRESHOLD } from './config';\nimport { ViewportContext } from './components';\n\nexport function useTrackers(): Tracker[] {\n  const [trackers, setTrackers] = useState<Tracker[]>([]);\n\n  useEffectOnce(() => {\n    let stream: EventStreamClient | null = new EventStreamClient(\n      `${API_URI}/events`\n    );\n\n    stream.receive<Tracker[]>((data: Tracker[] | null) => {\n      if (Array.isArray(data)) {\n        setTrackers(data);\n      }\n    });\n\n    return () => {\n      stream = null;\n    };\n  });\n\n  return trackers;\n}\n\n// eslint-disable-next-line\nexport function useRoutes() {\n  return useAsync<Route[]>(\n    () =>\n      fetch(`${API_URI}/routes`).then((response: Response) => response.json()),\n    []\n  );\n}\n\nexport function useUserLocation(): [GeoLocationSensorState | null, () => void] {\n  const [viewport, setViewport] = useContext(ViewportContext);\n  const [location, setLocation] = useState<GeoLocationSensorState | null>(null);\n  const [determined, setDetermined] = useBoolean(false);\n  const geolocation = useGeolocation();\n\n  function isLocated(state: GeoLocationSensorState | null): boolean {\n    return !!state && !!state.latitude && !!state.longitude;\n  }\n\n  useEffect(() => {\n    if (!isLocated(geolocation)) return;\n\n    const userCoords: L.PointTuple = [\n      Number(geolocation.latitude),\n      Number(geolocation.longitude)\n    ];\n\n    if (!withinBounds(userCoords)) return;\n\n    setLocation(geolocation);\n\n    if (!determined) {\n      setDetermined();\n      setViewport({ center: userCoords, zoom: MAP_DETAILED_ZOOM_THRESHOLD });\n    }\n  }, [geolocation]);\n\n  const resetToUserLocation = useCallback(() => {\n    if (!isLocated(geolocation)) return;\n\n    const userCoords: L.PointTuple = [\n      Number(geolocation.latitude),\n      Number(geolocation.longitude)\n    ];\n\n    if (!withinBounds(userCoords)) return;\n\n    setViewport({ center: userCoords, zoom: MAP_DETAILED_ZOOM_THRESHOLD });\n  }, [geolocation]);\n\n  return [location, resetToUserLocation];\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      // eslint-disable-next-line\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'leaflet/dist/leaflet.css';\nimport { GlobalStyles, ViewportProvider } from './components';\n\nReactDOM.render(\n  <ViewportProvider>\n    <GlobalStyles />\n    <App />\n  </ViewportProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}